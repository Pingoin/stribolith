import { VerticalBox, HorizontalBox, GridBox } from "std-widgets.slint";

    export struct Sattelite{
        prn:int,elevation:float, azimuth:float, signalStrenght:float,used:bool,system:string}

    export struct GnssData {
        lat:float,
        long:float,
        alt:float,
        leap_seconds:int,
        err_lon:float,
        err_lat:float,
        err_plane:float,
        err_alt:float,

        track:float,
        speed:float,
        climb:float,

        err_track:float,
        err_speed:float,
        err_climb:float,

        mode:string,

        satellites:[Sattelite],
    }

    export global GnssState {
    in-out property <GnssData> gnss;
}

export component GnssDataWidget {
    VerticalBox {
        spacing: 16px;
        padding: 16px;

        // Position Card
        Rectangle {
            border-width: 1px;
            border-color: #ccc;

            padding: 12px;

            VerticalBox {
                spacing: 8px;

                Text {
                    text: "Position: " + GnssState.gnss.lat + ", " + GnssState.gnss.long + ", Alt: " + GnssState.gnss.alt + " m";
                }

                Text {
                    text: "Leap Seconds: " + GnssState.gnss.leap_seconds;
                }

                Text {
                    text: "Errors: Lon " + GnssState.gnss.err_lon + " m, Lat " + GnssState.gnss.err_lat + " m";
                }

                Text {
                    text: "Plane Error: " + GnssState.gnss.err_plane + " m, Altitude Error: " + GnssState.gnss.err_alt + " m";
                }

                Text {
                    text: "Track: " + GnssState.gnss.track + "°"; 
                }

                Text {
                    text: "Speed: " + GnssState.gnss.speed + " m/s";
                }

                Text {
                    text: "Climb: " + GnssState.gnss.climb + " m/s";
                }

                Text {
                    text: "Mode: " + GnssState.gnss.mode;
                }

                Text {
                    text: "Error (Track/Speed/Climb): " + GnssState.gnss.err_track + "/" + GnssState.gnss.err_speed + "/" + GnssState.gnss.err_climb;
                }
            }
        }

        // Satellites Card
        Rectangle {
            border-width: 1px;
            border-color: #ccc;
            padding: 12px;

            VerticalBox {
                spacing: 8px;

                Text {
                    text: "Satellites";
                    font-size: 20px;
                    font-weight: 600;
                }

                VerticalBox {
                    spacing: 6px;
                    HorizontalBox {
                        Text {
                            text: "PRN";
                        }

                        Text {
                            text: "Elevation";
                        }

                        Text {
                            text: "Azimuth";
                        }

                        Text {
                            text: "Signal";
                        }

                        Text {
                            text: "Used";
                        }

                        Text {
                            text: "System";
                        }
                    }
                    // Satellite Rows
                    for sat in GnssState.gnss.satellites: HorizontalBox {
                        Text {
                            text: sat.prn;
                        }

                        Text {
                            text: sat.elevation;
                        }

                        Text {
                            text: sat.azimuth;
                        }

                        Text {
                            text: sat.signalStrenght;
                        }

                        Text {
                            text: sat.used == true ? "✓" : "✗"; 
                            color: sat.used == true ? green : red;
                        }

                        Text {
                            text: sat.system;
                        }
                    }
                }
            }
        }
    }
}
